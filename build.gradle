apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'eclipse'

group = 'org.jpos.template'
version = '1.8.9'
sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
    mavenLocal()
    mavenCentral()
    mavenRepo url: "http://jpos.org/maven"
}

dependencies {
    compile group:'org.jpos', name:'jpos', version:'1.8.8+'
    testCompile group:'junit', name:'junit', version:'4.8.2'
}

task wrapper( type: Wrapper ) {
    description = "Generate gradlew[.bat]"
    gradleVersion = '1.3'
}

task version (type: JavaExec, dependsOn: classes) {
    description = "Shows jPOS Version"
    main = 'org.jpos.q2.Q2'
    args = "--version".split().toList()
    classpath configurations.runtime 
}

jar () {
    manifest {
        def manifestClasspath = configurations.runtime.collect { "lib/" + it.getName() }.join(' ')
        attributes 'Implementation-Title': "${project.name}",
                   'Implementation-Version': version,
                   'Main-Class': 'org.jpos.q2.Q2',
                   'Class-Path': manifestClasspath
    }
}

task dist (type: Tar) { 
    dependsOn 'jar'
    compression = Compression.GZIP
    includeEmptyDirs true
    into("jpos-$version") {
        from jar.archivePath 
    }
    into("jpos-$version/lib") {
        from configurations.runtime 
    }
    into("jpos-$version") {
        from ("$projectDir/src/dist") {
            filter(
                org.apache.tools.ant.filters.ReplaceTokens, 
                tokens: [jarname: "${project.name}-${version}.jar".toString()]
            )
        }
    }
}

task runtime (type: Copy, description:  'Generate runtime directory') { 
    dependsOn 'jar'
    includeEmptyDirs true
    destinationDir = new File('runtime')
    from jar.archivePath 
    from ("$projectDir/src/dist") {
        filter(
            org.apache.tools.ant.filters.ReplaceTokens, 
            tokens: [jarname: "${project.name}-${version}.jar".toString()]
        )
    }
    into("lib") {
        from configurations.runtime 
    }
}

task cleanRuntime (type: Delete) {
    description = "Deletes runtime directory"
    delete 'runtime'
}

